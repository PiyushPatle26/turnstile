## This is the configuration file for dinit-userservd.
##
## The daemon will function even without a configuration
## file, but the values here reflect the built-in defaults.
##
## The syntax is a simple line-by-line list of values.
## Values are case-sensitive. Whitespace around the
## assignment (=) as well as any leading and trailing
## whitespace is ignored. Only 1024 characters at most
## are read per line, including whitespace.
##
## Lines starting with # are considered comments. Lines
## that fail to parse are ignored. Invalid values are
## ignored (configuration will be unchanged).

# Whether to output debug information. This is verbose
# logging that is only useful when investigating issues.
#
# Valid values are 'yes' and 'no'.
#
debug = no

# Whether to disable user service handling. If set to yes
# no dinit instances will be spawned, but the daemon will
# still perform login tracking and auxiliary tasks such
# as rundir management.
#
# Valid values are 'yes' and 'no'.
#
disable = no

# Whether to print debug messages also to stderr.
#
# Valid values are 'yes' and 'no'.
#
debug_stderr = no

# The directory containing service links that must be
# started in order for the login to proceed. Can be
# empty, in which case nothing is waited for.
# Relative to the home directory.
#
boot_dir = .config/dinit.d/boot.d

# This is just like boot_dir, but not controlled by the
# user. Instead, the system installs links there, and
# they are started for all users universally.
#
system_boot_dir = /usr/lib/dinit.d/user/boot.d

# A directory user service files are read from. Can be
# set multiple times, in which case multiple service
# directories will be used. Relative paths are within
# the user's home directory. The ordering matters, as
# earlier directories will be checked first.
#
# If no directory is set in the config file, a default
# list is used, which is equal to the example list here.
#
services_dir = .config/dinit.d
services_dir = /etc/dinit.d/user
services_dir = /usr/local/lib/dinit.d/user
services_dir = /usr/lib/dinit.d/user

# Whether to keep already started services running even
# after the last login of the user is gone. The default
# behavior is to stop them unless a file with the same
# name as the user exists in '@LINGER_PATH@'.
#
# It is not necessary to log in and out when the linger
# directory is changed, as the current state is checked
# upon last logout.
#
# Note that lingering is disabled when manage_rundir is
# set to no. That is because various user services may
# be relying on the rundir's existence, and it cannot
# be deleted until the user is gone.
#
# Valid values are 'yes', 'no' and 'maybe'.
#
linger = maybe

# The value of XDG_RUNTIME_DIR that is exported into the
# user service environment. Special values '%u' (user ID),
# '%g' (group ID) and '%%' (the character %) are allowed
# and substituted in the string. Set to empty string if
# you want to prevent it from being exported altogether.
#
# If you are using elogind, you should not mess with this
# path, and doing so will result in subtly broken systems.
# You should in general not mess with this path.
#
rundir_path = @RUN_PATH@/user/%u

# Whether to manage the XDG_RUNTIME_DIR. This may conflict
# with other rundir management methods, such as elogind,
# so when turning it on, make sure this is not the case.
#
# It is a requirement for the linger functionality to work.
#
# The default is dependent on the build (here: @MANAGE_RUNDIR@).
#
# Valid values are 'yes' and 'no'.
#
manage_rundir = @MANAGE_RUNDIR@

# Whether to export DBUS_SESSION_BUS_ADDRESS into the
# environment. When enabled, this will be exported and
# set to 'unix:path=RUNDIR/bus' where RUNDIR is the
# expanded value of rundir_path. This works regardless
# of if rundir is managed.
#
# Valid values are 'yes' and 'no'.
#
export_dbus_address = yes

# The timeout for the login. If the user services that
# are a part of the initial startup process take longer
# than this, the service manager instance is terminated
# and all connections to the session are closed.
#
# The value is an integer and represents seconds.
# If set to 0, the timeout is disabled.
#
login_timeout = 60
